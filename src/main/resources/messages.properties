api.baseRest.findById=find model by id
api.baseRest.findById.desc=should return single result by passing id as a path variable
api.baseRest.findAll=find all models
api.baseRest.findAll.desc=should return multiple result by passing filter json model as a request param
api.baseRest.countAll=count all records
api.baseRest.countAll.desc=should count results by passing filter json model as a request param
api.baseRest.deleteById=delete model by id
api.baseRest.deleteById.desc=should delete single record by passing id as a path variable
api.baseRest.save=save model
api.baseRest.save.desc=should save single model by passing json model as a request body
api.baseRest.update=update model
api.baseRest.update.desc=should update single model by passing json model as a request body
api.baseRest.logicalDeleteById=logical delete model by id
api.baseRest.logicalDeleteById.desc=should logical delete single record by passing id as a path variable
api.baseRest.predicate.search=Please use this format for making search queries on any fields
api.baseRest.predicate.example=Find all recipes without 'salmon' as an ingredient that needOven in foods=> <url>?ingredient.name=ne(salmon)&food.servings=1\n1. Equal: eq(value)\n2. Not equal: ne(value)\n3. Contains: contains(value)\n4. Starts with: startsWith(value)\n5. Ends with: endsWith(value)\n6. And: and(operator(value))\n7. Or: or(operator(value))\n8. Not: not(operator(value))\n9. Greater than: gt(value)\n10. Greater than or equal: gte(value)\n11. Less than: lt(value)\n12. Less than or equal: lte(value)\n13. Case ignore: ci(contains(value))\n\nFor more information refer to this [Link](https://bitbucket.org/gt_tech/spring-data-querydsl-value-operators/src/master/examples/mongodb-spring-data-querydsl-value-operators-example/?at=master)